{ 
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"This template shows how to use AWS CodePipeline and AWS CodeBuild to build an automated continuous deployment pipeline to Amazon Elastic Container Service (Amazon ECS) using clusters powered by AWS Fargate or Amazon Elastic Compute Cloud (Amazon EC2).\n",
   "Parameters":{ 
      "NameTag":{ 
         "Description":"The Name Tag used for the resources to be created.",
         "Type":"String",
         "Default":"DKW"
      },
      "Environment":{ 
         "Description":"The Environment Type",
         "Type":"String",
         "Default":"DEV"
      },
      "AZ1":{ 
         "Type":"AWS::EC2::AvailabilityZone::Name"
      },
      "AZ2":{ 
         "Type":"AWS::EC2::AvailabilityZone::Name"
      },
      "MainDomainName":{ 
         "AllowedPattern":"^(?!http)(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$",
         "Description":"The main domain name (e.g. example.com).",
         "Type":"String"
      },
      "WEBSubDomainPrefix":{ 
         "AllowedPattern":"^(?!http)(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$",
         "Description":"The prefix of sub domain name of the WebApp (e.g. web).",
         "Type":"String"
      },
      "APISubDomainPrefix":{ 
         "AllowedPattern":"^(?!http)(([a-zA-Z0-9]|[a-zA-Z0-9][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z0-9]|[A-Za-z0-9][A-Za-z0-9\\-]*[A-Za-z0-9])$",
         "Description":"The prefix of sub domain name of the API (e.g. api).",
         "Type":"String"
      },
      "HostedZoneId":{  
         "Type":"String",
         "Description":"The ID Of The Hosted Zone Where The Certificate's Records Will Be Added",
         "Default":"Z2STHFEWPT6599"
      },
      "WEBDesiredCount":{ 
         "Type":"Number",
         "Default":2
      },
      "APIDesiredCount":{ 
         "Type":"Number",
         "Default":2
      },
      "WEBGitHubRepositoryName":{ 
         "Description":"GitHub Repository Name",
         "Type":"String",
         "Default":"webapp"
      },
      "WEBRepositoryBranch":{ 
         "Description":"GitHub Repository Branch",
         "Type":"String"
      },
      "WEBGitHubOAuthToken":{ 
         "Description":"GitHub Repository Name",
         "Type":"String"
      },
      "WEBRepositoryName":{ 
         "Description":"GitHub Repository Name",
         "Type":"String",
         "Default":"web-ecr-repository"
      },
      "WEBGitHubOwner":{ 
         "Description":"GitHub Repository Name",
         "Type":"String"
      },
      "APIGitHubRepositoryName":{ 
         "Description":"GitHub Repository Name",
         "Type":"String",
         "Default":"api"
      },
      "APIRepositoryBranch":{ 
         "Description":"GitHub Repository Branch",
         "Type":"String"
      },
      "APIGitHubOAuthToken":{ 
         "Description":"GitHub Repository Name",
         "Type":"String"
      },
      "APIRepositoryName":{ 
         "Description":"GitHub Repository Name",
         "Type":"String",
         "Default":"api-ecr-repository"
      },
      "APIGitHubOwner":{ 
         "Description":"GitHub Repository Name",
         "Type":"String"
      }
   },
   "Resources":{ 
      "VPC":{ 
         "Type":"AWS::CloudFormation::Stack",
         "Properties":{ 
            "TemplateURL":"https://s3.amazonaws.com/dkw-nested-bucket/VPC.json",
            "Parameters":{ 
               "NameTag":{ 
                  "Ref":"NameTag"
               },
               "Environment":{ 
                  "Ref":"Environment"
               },
               "AZ1":{ 
                  "Ref":"AZ1"
               },
               "AZ2":{ 
                  "Ref":"AZ2"
               }
            }
         }
      },
      "SG":{ 
         "Type":"AWS::CloudFormation::Stack",
         "Properties":{ 
            "TemplateURL":"https://s3.amazonaws.com/dkw-nested-bucket/SG.json",
            "Parameters":{ 
               "NameTag":{ 
                  "Ref":"NameTag"
               },
               "Environment":{ 
                  "Ref":"Environment"
               },
               "VPC":{ 
                  "Fn::GetAtt":[ 
                     "VPC",
                     "Outputs.VpcId"
                  ]
               }
            }
         }
      },
      "ALB":{ 
         "Type":"AWS::CloudFormation::Stack",
         "Properties":{ 
            "TemplateURL":"https://s3.amazonaws.com/dkw-nested-bucket/ALB.json",
            "Parameters":{ 
               "NameTag":{ 
                  "Ref":"NameTag"
               },
               "Environment":{ 
                  "Ref":"Environment"
               },
               "VPC":{ 
                  "Fn::GetAtt":[ 
                     "VPC",
                     "Outputs.VpcId"
                  ]
               },
               "PublicSubnet1":{ 
                  "Fn::GetAtt":[ 
                     "VPC",
                     "Outputs.PublicSubnet1"
                  ]
               },
               "PublicSubnet2":{ 
                  "Fn::GetAtt":[ 
                     "VPC",
                     "Outputs.PublicSubnet2"
                  ]
               },
               "WEBALBSecurityGroup":{ 
                  "Fn::GetAtt":[ 
                     "SG",
                     "Outputs.WEBALBSecurityGroup"
                  ]
               },
               "APIALBSecurityGroup":{ 
                  "Fn::GetAtt":[ 
                     "SG",
                     "Outputs.APIALBSecurityGroup"
                  ]
               },
               "AcmCertificateArn":{ 
                  "Fn::GetAtt":[ 
                     "ACM",
                     "Outputs.AcmCertificateArn"
                  ]
               },
               "MainDomainName":{ 
                  "Ref":"MainDomainName"
               },
               "APISubDomainPrefix":{ 
                  "Ref":"APISubDomainPrefix"
               }
            }
         }
      },
      "Route53":{ 
         "DependsOn":"ALB",
         "Type":"AWS::CloudFormation::Stack",
         "Properties":{ 
            "TemplateURL":"https://s3.amazonaws.com/dkw-nested-bucket/R53.json",
            "Parameters":{ 
               "WEBDnsEndpoint":{ 
                  "Fn::GetAtt":[ 
                     "ALB",
                     "Outputs.WEBAlbDnsName"
                  ]
               },
               "APIDnsEndpoint":{ 
                  "Fn::GetAtt":[ 
                     "ALB",
                     "Outputs.APIAlbDnsName"
                  ]
               },
               "WEBHostedZoneID":{ 
                  "Fn::GetAtt":[ 
                     "ALB",
                     "Outputs.WEBPublicAlbCanonicalHostedZoneId"
                  ]
               },
               "APIHostedZoneID":{ 
                  "Fn::GetAtt":[ 
                     "ALB",
                     "Outputs.APIPublicAlbCanonicalHostedZoneId"
                  ]
               },
               "MainDomainName":{ 
                  "Ref":"MainDomainName"
               },
               "WEBSubDomainPrefix":{ 
                  "Ref":"WEBSubDomainPrefix"
               },
               "APISubDomainPrefix":{ 
                  "Ref":"APISubDomainPrefix"
               }
            }
         }
      },
      "ACM":{ 
         "Type":"AWS::CloudFormation::Stack",
         "Properties":{ 
            "TemplateURL":"https://s3.amazonaws.com/dkw-nested-bucket/ACM.json",
            "Parameters":{ 
               "HostedZoneId":{ 
                  "Ref":"HostedZoneId"
               },
               "MainDomainName":{ 
                  "Ref":"MainDomainName"
               }
            }
         }
      },
      "Cluster":{ 
         "Type":"AWS::CloudFormation::Stack",
         "Properties":{ 
            "TemplateURL":"https://s3.amazonaws.com/dkw-nested-bucket/Cluster.json",
            "Parameters":{ 
               "NameTag":{ 
                  "Ref":"NameTag"
               },
               "Environment":{ 
                  "Ref":"Environment"
               }
            }
         }
      },
      "TaskDefinition":{ 
         "Type":"AWS::CloudFormation::Stack",
         "Properties":{ 
            "TemplateURL":"https://s3.amazonaws.com/dkw-nested-bucket/TaskDefinition.json",
            "Parameters":{ 
               "NameTag":{ 
                  "Ref":"NameTag"
               },
               "Environment":{ 
                  "Ref":"Environment"
               }
            }
         }
      },
      "Service":{ 
         "Type":"AWS::CloudFormation::Stack",
         "Properties":{ 
            "TemplateURL":"https://s3.amazonaws.com/dkw-nested-bucket/Service.json",
            "Parameters":{ 
               "NameTag":{ 
                  "Ref":"NameTag"
               },
               "Environment":{ 
                  "Ref":"Environment"
               },
               "WEBDesiredCount":{ 
                  "Ref":"WEBDesiredCount"
               },
               "APIDesiredCount":{ 
                  "Ref":"APIDesiredCount"
               },
               "WEBCluster":{ 
                  "Fn::GetAtt":[ 
                     "Cluster",
                     "Outputs.WEBClusterID"
                  ]
               },
               "APICluster":{ 
                  "Fn::GetAtt":[ 
                     "Cluster",
                     "Outputs.APIClusterID"
                  ]
               },
               "WEBTaskDefinition":{ 
                  "Fn::GetAtt":[ 
                     "TaskDefinition",
                     "Outputs.WEBTaskDefinition"
                  ]
               },
               "APITaskDefinition":{ 
                  "Fn::GetAtt":[ 
                     "TaskDefinition",
                     "Outputs.APITaskDefinition"
                  ]
               },
               "WEBSecurityGroup":{ 
                  "Fn::GetAtt":[ 
                     "SG",
                     "Outputs.WEBSecurityGroup"
                  ]
               },
               "APISecurityGroup":{ 
                  "Fn::GetAtt":[ 
                     "SG",
                     "Outputs.APISecurityGroup"
                  ]
               },
               "WEBSubnet1":{ 
                  "Fn::GetAtt":[ 
                     "VPC",
                     "Outputs.PublicSubnet3"
                  ]
               },
               "WEBSubnet2":{ 
                  "Fn::GetAtt":[ 
                     "VPC",
                     "Outputs.PublicSubnet4"
                  ]
               },
               "APISubnet1":{ 
                  "Fn::GetAtt":[ 
                     "VPC",
                     "Outputs.PublicSubnet5"
                  ]
               },
               "APISubnet2":{ 
                  "Fn::GetAtt":[ 
                     "VPC",
                     "Outputs.PublicSubnet6"
                  ]
               },
               "WEBPublicAlbTargetGroupArn":{ 
                  "Fn::GetAtt":[ 
                     "ALB",
                     "Outputs.WEBPublicAlbTargetGroupArn"
                  ]
               },
               "APIPublicAlbTargetGroupArn":{ 
                  "Fn::GetAtt":[ 
                     "ALB",
                     "Outputs.APIPublicAlbTargetGroupArn"
                  ]
               }
            }
         }
      },
      "Pipeline":{
         "DependsOn":"ALB", 
         "Type":"AWS::CloudFormation::Stack",
         "Properties":{ 
            "TemplateURL":"https://s3.amazonaws.com/dkw-nested-bucket/Pipeline.json",
            "Parameters":{ 
               "NameTag":{ 
                  "Ref":"NameTag"
               },
               "Environment":{ 
                  "Ref":"Environment"
               },
               "WEBGitHubRepositoryName":{ 
                  "Ref":"WEBGitHubRepositoryName"
               },
               "WEBRepositoryBranch":{ 
                  "Ref":"WEBRepositoryBranch"
               },
               "WEBGitHubOwner":{ 
                  "Ref":"WEBGitHubOwner"
               },
               "WEBRepositoryName":{ 
                  "Ref":"WEBRepositoryName"
               },
               "WEBGitHubOAuthToken":{ 
                  "Ref":"WEBGitHubOAuthToken"
               },
               "WEBCluster":{ 
                  "Fn::GetAtt":[ 
                     "Cluster",
                     "Outputs.WEBClusterID"
                  ]
               },
               "APIGitHubRepositoryName":{ 
                  "Ref":"APIGitHubRepositoryName"
               },
               "APIRepositoryBranch":{ 
                  "Ref":"APIRepositoryBranch"
               },
               "APIGitHubOwner":{ 
                  "Ref":"APIGitHubOwner"
               },
               "APIRepositoryName":{ 
                  "Ref":"APIRepositoryName"
               },
               "APIGitHubOAuthToken":{ 
                  "Ref":"APIGitHubOAuthToken"
               },
               "APICluster":{ 
                  "Fn::GetAtt":[ 
                     "Cluster",
                     "Outputs.APIClusterID"
                  ]
               }
            }
         }
      }
   }
}